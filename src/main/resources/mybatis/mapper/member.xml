<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mycompany.let_ffle.dao.MemberDao">

	<insert id="insert" parameterType="Member">
		insert into member(mid,
		mpassword, mname, mnickname, mphone,
		maddress,mzipcode, mrole,
		menabled, mberry, mlastlogintime)
		values (#{mid}, #{mpassword},
		#{mname}, #{mnickname},
		#{mphone},#{maddress},#{mzipcode},#{mrole},#{menabled},#{mberry},
		systimestamp)
	</insert>
	<!--insert문에 id=insert의 의미는 Dao에 있는 변수의 명을 의미하여 parameterType=memberDto(전달될 
		파라미터의 타입을 지정) insert into member의 테이블열의 목록들을 지정한후 , values란 각각의 열에 대응하는 값들을 
		나열을 한다. #{}이런 방식으로 쓴 이유는 파라미터의 값을 삽입하기위해 사용된 것이다. #{mid}는 파라미터로 전달된 mid의 
		값을 의미한다. -->

	<update id="delete" parameterType="String">
		update member
		set menabled = 0
		where mid = #{mid}
	</update>

	<select id="selectByMid" parameterType="String">
		select *
		from member
		where
		mid=#{mid}
	</select>

	<update id="updateMphone" parameterType="Member">
		update member
		set mphone=
		#{mphone}
		where mid = #{mid}
	</update>

	<update id="updateMnickname" parameterType="String">
		update member
		set
		mnickname=
		#{mnickname}
		where mid = #{mid}
	</update>

	<!-- id = 추상메소드명과 동일하게 작성, parameterType = 매개변수로 갇은 타입 mid에 맞는 password를 
		password 변경한다. -->
	<update id="updateMpassword" parameterType="String">
		update member
		set
		mpassword = #{mpassword}
		where mid = #{mid}
	</update>

	<!-- id= 추상 메소드명과 동일하게 작성, parameterType = 매개변수로 받은 타입 mid에 맞는 address를 
		변경한다. -->
	<update id="updateMaddress" parameterType="String">
		update member
		set
		maddress = #{maddress}, mzipcode = #{mzipcode}
		where mid = #{mid}
	</update>


	<!-- 여기부터 입니둥 -->
	<select id="login" parameterType="String">
		select *
		from member
		where
		member.mid = #{mid} , member.mpassword = #{mpassword}

	</select>

	<select id="getMyBoardCount" parameterType="String"
		resultType="int">
		select count(*)
		from board
		where mid=#{mid} and benabled=1
	</select>
	<!--마이페이지에 내 게시물 작성 가져오기 페이징처리 조회 때문에 중첩구문에 inner join 사용 외부 커리 처음 select 
		부분 최종 결과를 반환하여 pager.startrownum 행만 필터링한다. 중간 쿼리 두번쨰 select 부분 pager.endRownum 
		이하인 행만 선택하여 필터링한다. 내부 커리 inner join 이 있는 부분 먼저 Board 와 Member에서 공통인 나의 mid를 
		가져와야 하기 때문에 inner join 사용 mid가 특정 값과 일치 하고, 삭제되지 않는 행만 가져와서 내림차순으로 정렬하는 방식으로 
		사용하였다. -->
	<select id="getMyBoardList" parameterType="Map"
		resultType="Board">
      <![CDATA[
      select rnum,bno, btitle, bcreatedat,mid
      from (
          select rownum as rnum, bno, btitle, bcreatedat,mid
          from (
              select b.bno, b.btitle, b.bcreatedat, b.mid
              from member m 
              inner join board b on m.mid = b.mid
              where m.mid=#{mid} and benabled=1
              order by b.bno desc
          )
          where rownum <= #{pager.endRowNo}
      )
      where rnum >= #{pager.startRowNo}
      ]]>
	</select>

	<select id="findId" parameterType="String">
		select mid
		from member
		where
		mphone = #{mphone}
	</select>

	<select id="findPassword" parameterType="String">
		select count(*)
		from
		member
		where mphone = #{mphone} AND mid = #{mid}
	</select>


	<select id="selectLoginTime" parameterType="String"
		resultType="Member">
		select mlastlogintime
		from member
		where mid = #{mid}
	</select>

	<update id="updateLoginTime" parameterType="String">
		update
		member
		set
		mlastlogintime = systimestamp
		where mid = #{mid}
	</update>

	<select id="selectBerry" parameterType="String" resultType="int">
		select mberry
		from member
		where mid = #{mid}
	</select>

	<update id="updateBerry" parameterType="Map">
		update member
		set mberry =
		mberry + #{mberry}
		where mid = #{mid}
	</update>

	<select id="countByMid" parameterType="String" resultType="int">
		select count(*)
		from member
		where
		mid = #{mid}
	</select>

	<select id="countByMnickname" parameterType="String">
		select count(*)
		from
		member
		where
		mnickname = #{mnickname}
	</select>

	<select id="countByMphone" parameterType="String">
		select count(*)
		from
		member
		where
		mphone = #{mphone}
	</select>

	<select id="selectByMember" parameterType="Map"
		resultType="Member">

		select rnum, mid, mpassword, mname, mnickname, mphone, maddress,
		mzipcode, mrole, menabled, mberry, mlastlogintime
		from (
		select rownum as rnum, mid, mpassword, mname, mnickname, mphone, maddress,
		mzipcode, mrole, menabled, mberry, mlastlogintime
		from (
		select mid, mpassword, mname, mnickname, mphone, maddress, mzipcode, mrole,
		menabled, mberry, mlastlogintime
		from member
		<if test="searchType == 'mid'">
			where mid like '%${word}%'
		</if>
		<if test="searchType == 'mname'">
			where mname like '%${word}%'
		</if>
		<if test="searchType == 'mnickname'">
			where mnickname like '%${word}%'
		</if>
		order by mid desc
		)
          <![CDATA[ 
          where rownum <= #{pager.endRowNo}
      )
      where rnum >= #{pager.startRowNo}
      ]]>
	</select>

	<select id="memberCount" resultType="int">
		select count(*)
		from member
	</select>

	<select id="memberCountByWord" resultType="int">
		select count(*)
		from member
		<if test="searchType == 'mid'">
			where mid like '%${word}%'
		</if>
		<if test="searchType == 'mname'">
			where mname like '%${word}%'
		</if>
		<if test="searchType == 'mnickname'">
			where mnickname like '%${word}%'
		</if>
	</select>

	<select id="getMemberDetail" parameterType="String"
		resultType="Member">
		select *
		from member
		where mid = #{mid}
	</select>


</mapper>    