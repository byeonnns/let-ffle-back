spring.application.name=let-ffle-backend

# Port 설정
 server.port=80

################################################################################
# DataSource (커넥션 풀)
# Hikari DataSource 설정

# Oracle DB를 사용하겠다는 설정
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# 프로젝트에 사용할 Oracle DB의 호스트 이름(kosa164.iptime.org)과 SID(orcl)을 알려줌
#spring.datasource.url=jdbc:oracle:thin:@kosa164.iptime.org:orcl

# 프로젝트에 사용할 Oracle DB의 사용자 이름을 알려줌
#spring.datasource.username=user_final_team4
 
# 프로젝트에 사용할 Oracle DB의 비밀번호를 알려줌
#spring.datasource.password=oracle

# 프로젝트에 사용할 Oracle DB의 최대 커넥션 풀을 2개로 지정 (커넥션 풀에 대한 내용은 반드시 수업 PPT 및 검색해서 확실히 알아두기)
#spring.datasource.hikari.maximum-pool-size=2

################################################################################

################################################################################
# FileUpload 설정

# 프로젝트 내에서 첨부 파일이 DB에 전송되는 개별 파일의 크기를 최대 10MB로 제한하는 코드
spring.servlet.multipart.max-file-size=10MB

# 프로젝트 내에서 서버에 첨부 파일을 요청 자체의 크기를 최대 50MB로 제한하는 코드
spring.servlet.multipart.max-request-size=50MB
################################################################################

################################################################################
# MyBatis 설정

# Mybatis 관련 설정 파일들의 위치를 알려주는 코드 : mapper-config.xml 파일의 위치를 아래 경로에서 찾으라고 알려줌
mybatis.config-location=classpath:mybatis/mapper-config.xml

# Mybatis 관련 설정 파일들의 위치를 알려주는 코드 : 각 DAO와 연결된 mapper.xml 파일들의 위치를 아래 경로에서 찾으라고 알려줌
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
################################################################################

################################################################################
# JWT 비밀키 설정

# 1. JSON Web Token은 헤더, 페이로드, 시그니처 구조로 이루어져 있음
# 2. 헤더에는 암호화에 사용된 알고리즘과 타입을 명시하는 곳
# 3. 페이로드에는 사용될 데이터를 명시하는 곳 ex) id는 tjdwns3823, mrole은 ROLE_ADMIN, JWT 유효기간은 1시간 ... 등등 필요한 데이터가 뭔지에 따라 작성되는 내용이 바뀜
# 4. 시그니처에는 내가 발급해준 토큰이라는 서명을 명시하는 곳
# 4-1. 내가 발급해준 토큰이라는 의미에서 내 SecretKey를 가지고 서명을 암호화한 뒤 시그니처에 서명을 저장
# 4-2. 이 때 내 SecretKey를 만드는 과정에서 사용되는 키가 바로 아래에 작성된 비밀키의 값
# 4-3. 따라서 아래 값을 바꿔주면 암호화된 서명도 바뀜 -> 보안을 위해 주기적으로 값을 바꿔줌

jwt.security.key = com.mycompany.letffle.fournerd.team4
################################################################################